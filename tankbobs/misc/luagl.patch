Index: build-cross.sh
===================================================================
--- build-cross.sh	(revision 0)
+++ build-cross.sh	(revision 0)
@@ -0,0 +1 @@
+i586-mingw32msvc-gcc -I../include/ -I/usr/include/GL/ -I/usr/lib/gcc/i586-mingw32msvc/4.2.1-sjlj/include -I/usr/lib/gcc/i586-mingw32msvc/4.2.1-sjlj/include/lua5.1 -L/usr/lib/gcc/i586-mingw32msvc/4.2.1-sjlj -O3 -funroll-loops -shared -o opengl.dll LuaGL.c LuaGLAux.c -llua5.1 -lopengl32 -lglu32 -lm -O3 -funroll-loops 

Property changes on: build-cross.sh
___________________________________________________________________
Added: svn:executable
   + *

Index: LuaGL.c
===================================================================
--- LuaGL.c	(revision 43)
+++ LuaGL.c	(working copy)
@@ -276,16 +276,20 @@
 
    // test arguments
    if(!lua_isstring(L, 1))
-      script_error(L, "incorrect argument to function 'gl.BlendEquation'");
+      luaL_error(L, "incorrect argument to function 'gl.BlendEquation'");
 
    // get values
    mode = (GLenum)get_gl_enum(L, 1);
 
    // test arguments
    if((mode == ENUM_ERROR))
-      script_error(L, "incorrect string argument to function 'gl.BlendFunc'");
+      luaL_error(L, "incorrect string argument to function 'gl.BlendFunc'");
 
+#ifdef WIN32
+   fprintf(stderr, "glBlendEquation is unsupported on WIN32 systems!\n");
+#else
    glBlendEquation(mode);
+#endif
 
    return 0;
 }
@@ -2020,8 +2024,8 @@
       case GL_RED:  case GL_GREEN:  case GL_BLUE:
       case GL_ALPHA: case GL_LUMINANCE: n = 1; break;
       case GL_LUMINANCE_ALPHA:          n = 2; break;
-      case GL_RGB:  case GL_BGR_EXT:    n = 3; break;
-      case GL_RGBA: case GL_BGRA_EXT:   n = 4; break;
+      //case GL_RGB:  case GL_BGR_EXT:    n = 3; break;
+      //case GL_RGBA: case GL_BGRA_EXT:   n = 4; break;
       default:
          ShowError("incorrect string argument to function 'gl.GetTexImage'");
    }
@@ -3625,12 +3629,12 @@
          break;
 
       case GL_RGB:
-      case GL_BGR_EXT:
+      //case GL_BGR_EXT:
          size = 3;
          break;
 
       case GL_RGBA:
-      case GL_BGRA_EXT:
+      //case GL_BGRA_EXT:
          size = 4;
          break;
    }
@@ -3956,7 +3960,7 @@
   {NULL, NULL}
 };
 
-LUAGL_API int luaopen_LuaGL (lua_State *L) {
+LUAGL_API int luaopen_opengl (lua_State *L) {
   luaL_openlib(L, "gl", gllib, 0);
 
   lua_getglobal(L, "gl");
Index: build.sh
===================================================================
--- build.sh	(revision 0)
+++ build.sh	(revision 0)
@@ -0,0 +1,2 @@
+#!/bin/sh
+gcc -I../include/ -I/usr/include/lua5.1/ -fPIC -llua -lGL -lm -O3 -funroll-loops -shared -o opengl.so LuaGL.c LuaGLAux.c
